name: PHP

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ '**' ]

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Psalm
        uses: docker://ghcr.io/psalm/psalm-github-actions

  e2e:
    name: End to end tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
        neo4j-version: [ "4.4", "4.4-enterprise", "5", "5-enterprise" ]
    services:
      app:
        image: composer:2.5
      neo4j:
        image: neo4j:${{ matrix.neo4j-version }}
        ports: [ "7687:7687" ]
        env:
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
          NEO4J_AUTH: "neo4j/testtest"
        options: >-
          --name neo4j-e2e
          --health-cmd "cypher-shell -u neo4j -p testtest 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-start-period 10s
          --health-retries 5
          --volume /tmp:/movies

    steps:
      - name: Check out project sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Import dataset
        run: docker exec neo4j-e2e cypher-shell -u "$DB_USER" -p "$DB_PASSWORD" --file /var/lib/neo4j/import/movies.cypher
      - uses: php-actions/composer@v6
        name: Install PHP and Composer
        with:
          progress: yes
          php_version: ${{ matrix.php-version }}
      - uses: cypress-io/github-action@v5
        env:
          NEO4J_URI: bolt://localhost
          NEO4J_DATABASE: "neo4j"
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: testtest
        with:
          working-directory: e2e
          browser: chrome
          headless: true
          start: composer --working-dir=.. run start
